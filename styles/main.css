/*! normalize.css v4.2.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,optgroup,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}a{text-decoration:none}body{font-family:Chava,Press Start\ 2P,Arial,sans-serif;margin:0;padding:0;font-size:16px;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.l-content{margin:0 auto}@font-face{font-family:Chava;src:url(../fonts/Chava-Regular.ttf)}.header{height:50px;width:100%}.nav{justify-content:flex-end;align-items:center;background:#93f;padding:0 50px}.nav,.navbar{display:flex;flex-direction:row}.navbar{margin:0;padding:0;list-style-type:none;justify-content:center;align-items:flex-end;height:50px}.navbar__item{display:inline-block;margin-left:25px}.navbar__link{color:#fff;font-size:1.5rem;transition:all .2s ease-in-out}.navbar__link:hover{text-shadow:2px 2px 2px #bf80ff}.hero{display:flex;flex-direction:row;justify-content:center;align-items:center;position:relative;margin:0;height:calc(100vh - 75px);background:linear-gradient(#93f,#39f);background-repeat:no-repeat}.logo{position:absolute;top:-37px;left:3vw;height:100px;width:100px;border-bottom:5px solid gray;background-image:url(../img/stand1.png);background-repeat:no-repeat;background-size:contain;background-position:100% 100%;animation-name:a;animation-duration:.3s;animation-iteration-count:infinite}@keyframes a{25%{background-image:url(../img/stand2.png)}50{background-image:url(../img/stand3.png)}75{background-image:url(../img/stand4.png)}to{background-image:url(../img/stand1.png)}}.intro{color:#fff;text-align:center}.intro__name{margin:0;margin-bottom:20px;font-size:10vw;text-shadow:2px 2px 2px #93f,-2px -2px 2px #93f,2px -2px 2px #93f,-2px 2px 2px #93f,4px 0 2px #bf80ff,-4px 0 2px #bf80ff,4px 4px 2px #bf80ff,-4px -4px 2px #bf80ff,4px -4px 2px #bf80ff,-4px 4px 2px #bf80ff,0 4px 2px #bf80ff,0 -4px 2px #bf80ff}.intro__slogan{font-size:2vw;margin-bottom:60px}.intro__button{color:#fff;font-size:2vw;padding:.7vw 3vw;background:#bf80ff;border:5px solid #a64dff;transition:all .2s ease-in-out}.intro__button:hover{background:#c9f;border:5px solid #b366ff}.star{position:absolute;top:30vh;left:10vw;animation-name:b;animation-duration:.5s;animation-iteration-count:infinite}.star:nth-child(odd){animation-delay:.25s}.star:nth-child(2){top:70vh;left:80vw}.star:nth-child(3){top:7vh;left:77vw}.star:nth-child(4){top:15vh;left:44vw}.star:nth-child(5){top:80vh;left:25vw}.star:nth-child(6){top:70vh;left:90vw}.star__light{position:relative}.star__light:before{top:6px;width:14px;height:2px}.star__light:after,.star__light:before{position:absolute;content:"";background:#fff}.star__light:after{left:6px;width:2px;height:20px}.star__light--down{position:relative}.star__light--down:before{top:13px;position:absolute;content:"";width:14px;height:2px;background:#fff}.star__light--down:after{left:6px;position:absolute;content:"";width:2px;height:20px;background:#fff}@keyframes b{0%{transform:scale(1.1)}to{transform:scale(1)}}.falling-man{display:none;margin:0 auto;position:fixed;top:9vh;left:50%;transform:translateX(-50%)}.falling-man__img{display:block;background-image:url(../img/fall1.png);background-repeat:no-repeat;background-size:cover;background-position:50%;height:65px;width:140px;position:relative;animation-name:c;animation-duration:.2s;animation-iteration-count:infinite}.falling-man__img:before{top:-20px;left:16px;height:20px}.falling-man__img:after,.falling-man__img:before{position:absolute;content:"";width:1px;background:#fff}.falling-man__img:after{top:-14px;left:6px;height:30px}@keyframes c{25%{background-image:url(../img/fall2.png)}50{background-image:url(../img/fall3.png)}75{background-image:url(../img/fall4.png)}to{background-image:url(../img/fall1.png)}}.main{background:linear-gradient(#39f,#303f9f,#e64a19);background-repeat:no-repeat}.main-section{align-items:flex-start;padding:0 8vw;height:320px;color:#fff}.main-section,.main-section:nth-child(even){display:flex;flex-direction:column;justify-content:center}.main-section:nth-child(even){align-items:flex-end}.main-section:nth-child(even) .main-section__text{text-align:right}.main-section__heading{margin:0;margin-bottom:20px;font-size:4vw;letter-spacing:.2vw;text-shadow:2px 2px 2px #bf80ff,-2px -2px 2px #bf80ff,2px -2px 2px #bf80ff,-2px 2px 2px #bf80ff}.main-section__text{font-size:1.3vw;letter-spacing:.2vw;line-height:1.6}.main-section__text strong{font-size:1.5vw}.contacts{display:flex;flex-direction:row;justify-content:center;align-items:center;height:68vh;border-top:10px dashed #e64a19;padding:0 20px}.contact-info__heading{margin:0;margin-bottom:20px;font-size:4vw;text-align:center}.contact-info__text{font-size:2vw;text-align:center;margin-bottom:40px}.media-links{margin:0;display:flex;flex-direction:row;justify-content:space-around;align-items:center;flex-wrap:wrap}.media-links__link{font-size:5vh;line-height:1;margin:0 25px 20px;transition:color .2s ease-in-out}.media-links__link:hover{color:#303f9f}.media-links__img{transform:translateY(5px);max-height:5vh;width:5vh}.footer{height:10vh;border-top:10px dashed #fff;background:gray;padding:0 50px;display:flex;flex-direction:row;justify-content:space-between;align-items:center}.footer__copyright,.footer__made-by{font-size:1.5vw}.footer__author-link{transition:color .3s ease-in-out}.footer__author-link:hover{color:#93f}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9ub2RlLW5vcm1hbGl6ZS1zY3NzL19ub3JtYWxpemUuc2NzcyIsIm1haW4uY3NzIiwiY29tbW9uL2NvbW1vbi5zY3NzIiwiY29tbW9uL3ZhcmlhYmxlcy5zY3NzIiwiY29tbW9uL2xheW91dC5zY3NzIiwiY29tbW9uL2ZvbnRzLnNjc3MiLCJibG9ja3MvaGVhZGVyLnNjc3MiLCJjb21tb24vbWl4aW5zLnNjc3MiLCJibG9ja3MvaGVyby5zY3NzIiwiYmxvY2tzL2ZhbGxpbmctbWFuLnNjc3MiLCJibG9ja3Mvc2VjdGlvbnMuc2NzcyIsImJsb2Nrcy9jb250YWN0cy5zY3NzIiwiYmxvY2tzL2Zvb3Rlci5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRFQUE0RSxBQVE1RSxLQUNFLHVCQUF3QixBQUN4QixpQkFBa0IsQUFDbEIsMEJBQTJCLEFBQzNCLDZCQUErQixDQUNoQyxBQU1ELEtBQ0UsUUFBVSxDQUNYLEFBV0Qsb0ZBWUUsYUFBZSxDQUNoQixBQU1ELDRCQUlFLG9CQUFzQixDQUN2QixBQU1ELHNCQUNFLGFBQWMsQUFDZCxRQUFVLENBQ1gsQUFNRCxTQUNFLHVCQUF5QixDQUMxQixBQU9ELGtCQUVFLFlBQWMsQ0FDZixBQVVELEVBQ0UsNkJBQThCLEFBQzlCLG9DQUFzQyxDQUN2QyxBQU9ELGlCQUVFLGVBQWlCLENBQ2xCLEFBVUQsWUFDRSxtQkFBb0IsQUFDcEIsMEJBQTJCLEFBQzNCLGdDQUFrQyxDQUNuQyxBQU1ELFNBRUUsb0JBQXFCLEFBU3JCLGtCQUFvQixDQVJyQixBQWVELElBQ0UsaUJBQW1CLENBQ3BCLEFBT0QsR0FDRSxjQUFlLEFBQ2YsY0FBaUIsQ0FDbEIsQUFNRCxLQUNFLHNCQUF1QixBQUN2QixVQUFZLENBQ2IsQUFNRCxNQUNFLGFBQWUsQ0FDaEIsQUFPRCxRQUVFLGNBQWUsQUFDZixjQUFlLEFBQ2Ysa0JBQW1CLEFBQ25CLHVCQUF5QixDQUMxQixBQUVELElBQ0UsYUFBZ0IsQ0FDakIs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Y0FBZ0IsQ0FnQmhCLEFBbkJELG1CQUtFLGNBQWUsQUFDZixjQUFlLEFBQ2YsbUJBQXlCLEFBQ3pCLGdDQUFtQyxDQUtuQyxBQWJGLHlCQVdHLGFSQWEsQ1FDYixBQVpILGtCQWVFLDBCQUFxQixBQUNyQixlQUFnQixBQUNoQixTQUFXLENBQ1gsQUN2Q0YsUUFDQyxZQUFhLEFBQ2IsNEJBQThCLEFBQzlCLGdCVDRCZSxBUzNCZixlQUFnQixBTEVmLGFBQWMsQUFDZCxtQktGc0IsQUxHdEIsOEJLSHFDLEFMSXJDLGtCS0o2QyxDQWM5QyxBQW5CRCxvQ0FXRSxlQUFpQixDQUNqQixBQVpGLHFCQWNFLGdDQUFtQyxDQUluQyxBQWxCRiwyQkFnQkcsVVRXYSxDU1ZiIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIG5vcm1hbGl6ZS5jc3MgdjQuMi4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDMuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDIgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDMgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAzICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsIC8qIDEgKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLCAvKiAyICovXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkgeyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbnRlbXBsYXRlLCAvKiAxICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBvcGFjaXR5OiAwLjU0O1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cbiIsIi8qISBub3JtYWxpemUuY3NzIHY0LjIuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMy4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDIgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDMgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbnRlbXBsYXRlLFxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwOyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0OyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi8qKioqKioqKioqKioqKioqKioqKipcbkJSRUFLUE9JTlRTXG4qKioqKioqKioqKioqKioqKioqKiovXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiQ2hhdmFcIixcIlByZXNzIFN0YXJ0IDJQXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgdGV4dC1yZW5kZXJpbmc6IGF1dG87XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOyB9XG5cbi5sLWNvbnRlbnQge1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiQ2hhdmFcIjtcbiAgc3JjOiB1cmwoLi8uLi9mb250cy9DaGF2YS1SZWd1bGFyLnR0Zik7IH1cblxuLmhlYWRlciB7XG4gIGhlaWdodDogNTBweDtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLm5hdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICM5OTMzZmY7XG4gIHBhZGRpbmc6IDAgNTBweDsgfVxuXG4ubmF2YmFyIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIGhlaWdodDogNTBweDsgfVxuICAubmF2YmFyX19pdGVtIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IDI1cHg7IH1cbiAgLm5hdmJhcl9fbGluayB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0OyB9XG4gICAgLm5hdmJhcl9fbGluazpob3ZlciB7XG4gICAgICB0ZXh0LXNoYWRvdzogMnB4IDJweCAycHggI2JmODBmZjsgfVxuXG4uaGVybyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogMDtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNzVweCk7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjOTkzM2ZmLCAjMzM5OWZmKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuXG4ubG9nbyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtMzdweDtcbiAgbGVmdDogM3Z3O1xuICBoZWlnaHQ6IDEwMHB4O1xuICB3aWR0aDogMTAwcHg7XG4gIGJvcmRlci1ib3R0b206IDVweCBzb2xpZCBncmF5O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvc3RhbmQxLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodCBib3R0b207XG4gIGFuaW1hdGlvbi1uYW1lOiBtYW4tc2hha2U7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMC4zcztcbiAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7IH1cblxuQGtleWZyYW1lcyBtYW4tc2hha2Uge1xuICAwJSB7IH1cbiAgMjUlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvc3RhbmQyLnBuZ1wiKTsgfVxuICA1MCB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL3N0YW5kMy5wbmdcIik7IH1cbiAgNzUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9zdGFuZDQucG5nXCIpOyB9XG4gIDEwMCUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9zdGFuZDEucG5nXCIpOyB9IH1cblxuLmludHJvIHtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmludHJvX19uYW1lIHtcbiAgICBtYXJnaW46IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBmb250LXNpemU6IDEwdnc7XG4gICAgdGV4dC1zaGFkb3c6IDJweCAycHggMnB4ICM5OTMzZmYsIC0ycHggLTJweCAycHggIzk5MzNmZiwgMnB4IC0ycHggMnB4ICM5OTMzZmYsIC0ycHggMnB4IDJweCAjOTkzM2ZmLCA0cHggMHB4IDJweCAjYmY4MGZmLCAtNHB4IDBweCAycHggI2JmODBmZiwgNHB4IDRweCAycHggI2JmODBmZiwgLTRweCAtNHB4IDJweCAjYmY4MGZmLCA0cHggLTRweCAycHggI2JmODBmZiwgLTRweCA0cHggMnB4ICNiZjgwZmYsIDBweCA0cHggMnB4ICNiZjgwZmYsIDBweCAtNHB4IDJweCAjYmY4MGZmOyB9XG4gIC5pbnRyb19fc2xvZ2FuIHtcbiAgICBmb250LXNpemU6IDJ2dztcbiAgICBtYXJnaW4tYm90dG9tOiA2MHB4OyB9XG4gIC5pbnRyb19fYnV0dG9uIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAydnc7XG4gICAgcGFkZGluZzogMC43dncgM3Z3O1xuICAgIGJhY2tncm91bmQ6ICNiZjgwZmY7XG4gICAgYm9yZGVyOiA1cHggc29saWQgI2E2NGRmZjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluLW91dDsgfVxuICAgIC5pbnRyb19fYnV0dG9uOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICNjYzk5ZmY7XG4gICAgICBib3JkZXI6IDVweCBzb2xpZCAjYjM2NmZmOyB9XG5cbi5zdGFyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDMwdmg7XG4gIGxlZnQ6IDEwdnc7XG4gIGFuaW1hdGlvbi1uYW1lOiBzdGFyLXNoaW5lO1xuICBhbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IGluZmluaXRlOyB9XG4gIC5zdGFyOm50aC1jaGlsZChvZGQpIHtcbiAgICBhbmltYXRpb24tZGVsYXk6IDAuMjVzOyB9XG4gIC5zdGFyOm50aC1jaGlsZCgyKSB7XG4gICAgdG9wOiA3MHZoO1xuICAgIGxlZnQ6IDgwdnc7IH1cbiAgLnN0YXI6bnRoLWNoaWxkKDMpIHtcbiAgICB0b3A6IDd2aDtcbiAgICBsZWZ0OiA3N3Z3OyB9XG4gIC5zdGFyOm50aC1jaGlsZCg0KSB7XG4gICAgdG9wOiAxNXZoO1xuICAgIGxlZnQ6IDQ0dnc7IH1cbiAgLnN0YXI6bnRoLWNoaWxkKDUpIHtcbiAgICB0b3A6IDgwdmg7XG4gICAgbGVmdDogMjV2dzsgfVxuICAuc3RhcjpudGgtY2hpbGQoNikge1xuICAgIHRvcDogNzB2aDtcbiAgICBsZWZ0OiA5MHZ3OyB9XG4gIC5zdGFyX19saWdodCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLnN0YXJfX2xpZ2h0OmJlZm9yZSB7XG4gICAgICB0b3A6IDZweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICB3aWR0aDogMTRweDtcbiAgICAgIGhlaWdodDogMnB4O1xuICAgICAgYmFja2dyb3VuZDogd2hpdGU7IH1cbiAgICAuc3Rhcl9fbGlnaHQ6YWZ0ZXIge1xuICAgICAgbGVmdDogNnB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHdpZHRoOiAycHg7XG4gICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTsgfVxuICAgIC5zdGFyX19saWdodC0tZG93biB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgIC5zdGFyX19saWdodC0tZG93bjpiZWZvcmUge1xuICAgICAgICB0b3A6IDEzcHg7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgd2lkdGg6IDE0cHg7XG4gICAgICAgIGhlaWdodDogMnB4O1xuICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTsgfVxuICAgICAgLnN0YXJfX2xpZ2h0LS1kb3duOmFmdGVyIHtcbiAgICAgICAgbGVmdDogNnB4O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHdpZHRoOiAycHg7XG4gICAgICAgIGhlaWdodDogMjBweDtcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7IH1cblxuQGtleWZyYW1lcyBzdGFyLXNoaW5lIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTsgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpOyB9IH1cblxuLmZhbGxpbmctbWFuIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiA5dmg7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOyB9XG4gIC5mYWxsaW5nLW1hbl9faW1nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvZmFsbDEucG5nXCIpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGhlaWdodDogNjVweDtcbiAgICB3aWR0aDogMTQwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGFuaW1hdGlvbi1uYW1lOiBtYW4tZmFsbDtcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuMnM7XG4gICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7IH1cbiAgICAuZmFsbGluZy1tYW5fX2ltZzpiZWZvcmUge1xuICAgICAgdG9wOiAtMjBweDtcbiAgICAgIGxlZnQ6IDE2cHg7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgd2lkdGg6IDFweDtcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlOyB9XG4gICAgLmZhbGxpbmctbWFuX19pbWc6YWZ0ZXIge1xuICAgICAgdG9wOiAtMTRweDtcbiAgICAgIGxlZnQ6IDZweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICB3aWR0aDogMXB4O1xuICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgYmFja2dyb3VuZDogd2hpdGU7IH1cblxuQGtleWZyYW1lcyBtYW4tZmFsbCB7XG4gIDAlIHsgfVxuICAyNSUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9mYWxsMi5wbmdcIik7IH1cbiAgNTAge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9mYWxsMy5wbmdcIik7IH1cbiAgNzUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9mYWxsNC5wbmdcIik7IH1cbiAgMTAwJSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2ZhbGwxLnBuZ1wiKTsgfSB9XG5cbi5tYWluIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCMzMzk5ZmYsICMzMDNGOUYsICNFNjRBMTkpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyB9XG4gIC5tYWluLXNlY3Rpb24ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICBwYWRkaW5nOiAwIDh2dztcbiAgICBoZWlnaHQ6IDMyMHB4O1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAgIC5tYWluLXNlY3Rpb246bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cbiAgICAgIC5tYWluLXNlY3Rpb246bnRoLWNoaWxkKGV2ZW4pIC5tYWluLXNlY3Rpb25fX3RleHQge1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsgfVxuICAgIC5tYWluLXNlY3Rpb25fX2hlYWRpbmcge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgIGZvbnQtc2l6ZTogNHZ3O1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMnZ3O1xuICAgICAgdGV4dC1zaGFkb3c6IDJweCAycHggMnB4ICNiZjgwZmYsIC0ycHggLTJweCAycHggI2JmODBmZiwgMnB4IC0ycHggMnB4ICNiZjgwZmYsIC0ycHggMnB4IDJweCAjYmY4MGZmOyB9XG4gICAgLm1haW4tc2VjdGlvbl9fdGV4dCB7XG4gICAgICBmb250LXNpemU6IDEuM3Z3O1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMnZ3O1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNjsgfVxuICAgICAgLm1haW4tc2VjdGlvbl9fdGV4dCBzdHJvbmcge1xuICAgICAgICBmb250LXNpemU6IDEuNXZ3OyB9XG5cbi5jb250YWN0cyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDY4dmg7XG4gIGJvcmRlci10b3A6IDEwcHggZGFzaGVkICNFNjRBMTk7XG4gIHBhZGRpbmc6IDAgMjBweDsgfVxuXG4uY29udGFjdC1pbmZvX19oZWFkaW5nIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBmb250LXNpemU6IDR2dztcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5jb250YWN0LWluZm9fX3RleHQge1xuICBmb250LXNpemU6IDJ2dztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG5cbi5tZWRpYS1saW5rcyB7XG4gIG1hcmdpbjogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDsgfVxuICAubWVkaWEtbGlua3NfX2xpbmsge1xuICAgIGZvbnQtc2l6ZTogNXZoO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIG1hcmdpbjogMCAyNXB4IDIwcHggMjVweDtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzIGVhc2UtaW4tb3V0OyB9XG4gICAgLm1lZGlhLWxpbmtzX19saW5rOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjMzAzRjlGOyB9XG4gIC5tZWRpYS1saW5rc19faW1nIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNXB4KTtcbiAgICBtYXgtaGVpZ2h0OiA1dmg7XG4gICAgd2lkdGg6IDV2aDsgfVxuXG4uZm9vdGVyIHtcbiAgaGVpZ2h0OiAxMHZoO1xuICBib3JkZXItdG9wOiAxMHB4IGRhc2hlZCB3aGl0ZTtcbiAgYmFja2dyb3VuZDogZ3JheTtcbiAgcGFkZGluZzogMCA1MHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLmZvb3Rlcl9fY29weXJpZ2h0IHtcbiAgICBmb250LXNpemU6IDEuNXZ3OyB9XG4gIC5mb290ZXJfX21hZGUtYnkge1xuICAgIGZvbnQtc2l6ZTogMS41dnc7IH1cbiAgLmZvb3Rlcl9fYXV0aG9yLWxpbmsge1xuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZS1pbi1vdXQ7IH1cbiAgICAuZm9vdGVyX19hdXRob3ItbGluazpob3ZlciB7XG4gICAgICBjb2xvcjogIzk5MzNmZjsgfVxuIiwiaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cbmEge1xuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmJvZHl7XG5cdGZvbnQtZmFtaWx5OiBcIkNoYXZhXCIsXCJQcmVzcyBTdGFydCAyUFwiLCBBcmlhbCwgc2Fucy1zZXJpZjtcblx0bWFyZ2luOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZTtcblx0dGV4dC1yZW5kZXJpbmc6IGF1dG87XG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuXHQtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuIiwiLyoqKioqKioqKioqKioqKioqKioqKlxuQlJFQUtQT0lOVFNcbioqKioqKioqKioqKioqKioqKioqKi9cblxuIEBtaXhpbiBicmVha3BvaW50KCRwb2ludCkge1xuICAgQGlmICRwb2ludCA9PSBkZXNrdG9wIHtcbiAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEzNjVweCkgeyBAY29udGVudCA7IH1cbiAgfVxuICAgQGVsc2UgaWYgJHBvaW50ID09IGxhcHRvcCB7XG4gICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHsgQGNvbnRlbnQgOyB9XG4gIH1cbiAgICBAZWxzZSBpZiAkcG9pbnQgPT0gdGFibGV0IHtcbiAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7IEBjb250ZW50IDsgfVxuICB9XG4gICAgQGVsc2UgaWYgJHBvaW50ID09IHBoYWJsZXQge1xuICAgICBAbWVkaWEgKG1heC13aWR0aDogNjQwcHgpICB7IEBjb250ZW50IDsgfVxuICB9XG4gICBAZWxzZSBpZiAkcG9pbnQgPT0gbW9iaWxlIHtcbiAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDM3NXB4KSAgeyBAY29udGVudCA7IH1cbiAgfVxufVxuXG4vL0ZvbnQtc2l6ZXNcbiRiYXNlLWZvbnQtc2l6ZTogMTZweDtcblxuLy9Db2xvcnNcbiRzdHJlZXQ6ICNFREVFRjA7XG4kcHVycGxlOiAjOTkzM2ZmO1xuJHBpbms6IGxpZ2h0ZW4oJHB1cnBsZSwgMTUpO1xuJGJsdWU6ICMzMzk5ZmY7XG4kb3JhbmdlOiAjRTY0QTE5O1xuJGRhcmstZ3JheTogZ3JheTtcbiRpbmRpZ286ICMzMDNGOUY7IiwiLy9zdXN5XG4kc3VzeTogKFxuICAgICAgICBmbG93OiBsdHIsXG4gICAgICAgIG1hdGg6IGZsdWlkLFxuICAgICAgICBvdXRwdXQ6IGZsb2F0LFxuICAgICAgICBndXR0ZXItcG9zaXRpb246IGFmdGVyLFxuICAgICAgICBjb250YWluZXI6IGF1dG8sXG4gICAgICAgIGNvbnRhaW5lci1wb3NpdGlvbjogY2VudGVyLFxuICAgICAgICBjb2x1bW5zOiAxMixcbiAgICAgICAgZ3V0dGVyczogMCxcbiAgICAgICAgY29sdW1uLXdpZHRoOiBmYWxzZSxcbiAgICAgICAgZ2xvYmFsLWJveC1zaXppbmc6IGJvcmRlci1ib3gsXG4gICAgICAgIGxhc3QtZmxvdzogdG8sXG4gICAgICAgIGRlYnVnOiAoXG4gICAgICAgICAgICAgICAgaW1hZ2U6IHNob3csXG4gICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoIzY2ZiwgLjI1KSxcbiAgICAgICAgICAgICAgICBvdXRwdXQ6IGJhY2tncm91bmQsXG4gICAgICAgICAgICAgICAgdG9nZ2xlOiB0b3AgcmlnaHQsXG4gICAgICAgICksXG4gICAgICAgIHVzZS1jdXN0b206IChcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB0cnVlLFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtb3B0aW9uczogZmFsc2UsXG4gICAgICAgICAgICAgICAgYm94LXNpemluZzogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjbGVhcmZpeDogdHJ1ZSxcbiAgICAgICAgICAgICAgICByZW06IHRydWUsXG4gICAgICAgIClcbik7XG5cbi5sLWNvbnRhaW5lcntcbiAgICAgICAgICAgICAgXG59XG5cbi5sLWNvbnRlbnR7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xufSIsIkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiBcIkNoYXZhXCI7XG4gICAgc3JjOiB1cmwoLi8uLi9mb250cy9DaGF2YS1SZWd1bGFyLnR0Zik7XG59IiwiLmhlYWRlcntcblx0aGVpZ2h0OiA1MHB4O1xuXHR3aWR0aDogMTAwJTtcbn1cblxuLm5hdntcblx0XG5cdEBpbmNsdWRlIGZsZXgtbWl4aW4ocm93LCBmbGV4LWVuZCwgY2VudGVyKTtcblx0YmFja2dyb3VuZDogJHB1cnBsZTtcblx0cGFkZGluZzogMCA1MHB4O1xuXHRcbn1cblxuLm5hdmJhcntcblx0QGluY2x1ZGUgbGlzdC1yZXNldDtcblx0QGluY2x1ZGUgZmxleC1taXhpbihyb3csIGNlbnRlciwgZmxleC1lbmQpO1xuXHRoZWlnaHQ6IDUwcHg7XG5cdCZfX2l0ZW17XG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdG1hcmdpbi1sZWZ0OiAyNXB4O1xuXHR9XG5cdCZfX2xpbmt7XG5cdFx0Y29sb3I6IHdoaXRlO1xuXHRcdGZvbnQtc2l6ZTogMS41cmVtO1xuXHRcdHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xuXHRcdFxuXHRcdCY6aG92ZXJ7XG5cdFx0XHR0ZXh0LXNoYWRvdzogMnB4IDJweCAycHggJHBpbms7XG5cdFx0fVxuXHR9XG59IiwiQG1peGluIGxpc3QtcmVzZXR7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xufVxuQG1peGluIGZsZXgtbWl4aW4oJGZsZXgtZGlyZWN0aW9uLCAkanVzdGlmeSwgJGFsaWduKXtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246ICRmbGV4LWRpcmVjdGlvbjtcbiAganVzdGlmeS1jb250ZW50OiAkanVzdGlmeTtcbiAgYWxpZ24taXRlbXM6ICRhbGlnbjtcbn1cbkBtaXhpbiBjbGVhcmZpeHtcbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICB9XG59XG4iLCIuaGVyb3tcblx0QGluY2x1ZGUgZmxleC1taXhpbihyb3csIGNlbnRlciwgY2VudGVyKTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRtYXJnaW46IDA7XG5cdGhlaWdodDogY2FsYygxMDB2aCAtIDc1cHgpO1xuXHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoJHB1cnBsZSwgJGJsdWUpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7ICBcbn1cbi5sb2dve1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogLTM3cHg7XG5cdGxlZnQ6IDN2dztcblx0aGVpZ2h0OiAxMDBweDtcblx0d2lkdGg6IDEwMHB4O1xuXHRib3JkZXItYm90dG9tOiA1cHggc29saWQgZ3JheTtcblx0YmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL3N0YW5kMS5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgYm90dG9tO1xuICAgIGFuaW1hdGlvbi1uYW1lOiBtYW4tc2hha2U7XG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjNzIDtcbiAgICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiBpbmZpbml0ZTtcblx0XG59XG5Aa2V5ZnJhbWVzIG1hbi1zaGFrZSB7XG4gIDAle1xuICB9XG4gIDI1JXtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvc3RhbmQyLnBuZ1wiKTtcbiAgfVxuICA1MHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvc3RhbmQzLnBuZ1wiKTtcbiAgfVxuICA3NXtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvc3RhbmQ0LnBuZ1wiKTtcbiAgfVxuICAxMDAle1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9zdGFuZDEucG5nXCIpO1xuICB9XG59XG4uaW50cm97XG5cdGNvbG9yOiB3aGl0ZTtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHQmX19uYW1le1xuXHRcdG1hcmdpbjogMDtcblx0XHRtYXJnaW4tYm90dG9tOiAyMHB4O1xuXHRcdGZvbnQtc2l6ZTogMTB2dztcblx0XHR0ZXh0LXNoYWRvdzogMnB4IDJweCAycHggJHB1cnBsZSxcblx0XHRcdFx0XHQtMnB4IC0ycHggMnB4ICRwdXJwbGUsXG5cdFx0XHRcdFx0MnB4IC0ycHggMnB4ICRwdXJwbGUsXG5cdFx0XHRcdFx0LTJweCAycHggMnB4ICRwdXJwbGUsXG5cdFx0XHRcdFx0NHB4IDBweCAycHggJHBpbmssXG5cdFx0XHRcdFx0LTRweCAwcHggMnB4ICRwaW5rLFxuXHRcdFx0XHRcdDRweCA0cHggMnB4ICRwaW5rLFxuXHRcdFx0XHRcdC00cHggLTRweCAycHggJHBpbmssXG5cdFx0XHRcdFx0NHB4IC00cHggMnB4ICRwaW5rLFxuXHRcdFx0XHRcdC00cHggNHB4IDJweCAkcGluayxcblx0XHRcdFx0XHQwcHggNHB4IDJweCAkcGluayxcblx0XHRcdFx0XHQwcHggLTRweCAycHggJHBpbms7XG5cdH1cblx0Jl9fc2xvZ2Fue1xuXHRcdGZvbnQtc2l6ZTogMnZ3O1xuXHRcdG1hcmdpbi1ib3R0b206IDYwcHg7XG5cdH1cblx0Jl9fYnV0dG9ue1xuXHRcdGNvbG9yOiB3aGl0ZTtcblx0XHRmb250LXNpemU6IDJ2dztcblx0XHRwYWRkaW5nOiAwLjd2dyAzdnc7XG5cdFx0YmFja2dyb3VuZDogJHBpbms7XG5cdFx0Ym9yZGVyOiA1cHggc29saWQgZGFya2VuKCRwaW5rLCAxMCk7XG5cdFx0dHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQ7XG5cdFx0Jjpob3Zlcntcblx0XHRcdGJhY2tncm91bmQ6IGxpZ2h0ZW4oJHBpbmssIDUpO1xuXHRcdFx0Ym9yZGVyOiA1cHggc29saWQgZGFya2VuKCRwaW5rLCA1KTtcblx0XHR9XG5cdH1cblxufVxuLnN0YXJ7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dG9wOiAzMHZoO1xuXHRsZWZ0OiAxMHZ3O1xuXHRhbmltYXRpb24tbmFtZTogc3Rhci1zaGluZTtcblx0YW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzIDtcblx0YW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7XG5cdCY6bnRoLWNoaWxkKG9kZCl7XG5cdFx0YW5pbWF0aW9uLWRlbGF5OiAwLjI1cztcblx0fVxuXHQmOm50aC1jaGlsZCgyKXtcblx0XHR0b3A6IDcwdmg7XG5cdFx0bGVmdDogODB2dztcblx0fVxuXHQmOm50aC1jaGlsZCgzKXtcblx0XHR0b3A6IDd2aDtcblx0XHRsZWZ0OiA3N3Z3O1xuXHR9XG5cdCY6bnRoLWNoaWxkKDQpe1xuXHRcdHRvcDogMTV2aDtcblx0XHRsZWZ0OiA0NHZ3O1xuXHR9XG5cdCY6bnRoLWNoaWxkKDUpe1xuXHRcdHRvcDogODB2aDtcblx0XHRsZWZ0OiAyNXZ3O1xuXHR9XG5cdCY6bnRoLWNoaWxkKDYpe1xuXHRcdHRvcDogNzB2aDtcblx0XHRsZWZ0OiA5MHZ3O1xuXHR9XG5cblx0Jl9fbGlnaHR7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdCY6YmVmb3Jle1xuXHRcdFx0dG9wOiA2cHg7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRjb250ZW50OiBcIlwiO1xuXHRcdFx0d2lkdGg6IDE0cHg7XG5cdFx0XHRoZWlnaHQ6IDJweDtcblx0XHRcdGJhY2tncm91bmQ6IHdoaXRlO1xuXHRcdH1cblx0XHQmOmFmdGVye1xuXHRcdFx0bGVmdDogNnB4O1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0Y29udGVudDogXCJcIjtcblx0XHRcdHdpZHRoOiAycHg7XG5cdFx0XHRoZWlnaHQ6IDIwcHg7XG5cdFx0XHRiYWNrZ3JvdW5kOiB3aGl0ZTtcblx0XHR9XG5cblx0XHQmLS1kb3due1xuXHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdFx0JjpiZWZvcmV7XG5cdFx0XHRcdHRvcDogMTNweDtcblx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0XHRjb250ZW50OiBcIlwiO1xuXHRcdFx0XHR3aWR0aDogMTRweDtcblx0XHRcdFx0aGVpZ2h0OiAycHg7XG5cdFx0XHRcdGJhY2tncm91bmQ6IHdoaXRlO1xuXHRcdFx0fVxuXHRcdFx0JjphZnRlcntcblx0XHRcdFx0bGVmdDogNnB4O1xuXHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRcdGNvbnRlbnQ6IFwiXCI7XG5cdFx0XHRcdHdpZHRoOiAycHg7XG5cdFx0XHRcdGhlaWdodDogMjBweDtcblx0XHRcdFx0YmFja2dyb3VuZDogd2hpdGU7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cbn1cbkBrZXlmcmFtZXMgc3Rhci1zaGluZSB7XG5cdDAle1xuXHRcdHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcblx0fVxuXHQxMDAle1xuXHRcdHRyYW5zZm9ybTogc2NhbGUoMSlcblx0fVxufVxuIiwiLmZhbGxpbmctbWFue1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogOXZoO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcblxyXG4gICZfX2ltZ3tcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2ZhbGwxLnBuZ1wiKTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgIGhlaWdodDogNjVweDtcclxuICAgIHdpZHRoOiAxNDBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGFuaW1hdGlvbi1uYW1lOiBtYW4tZmFsbDtcclxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC4ycyA7XHJcbiAgICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiBpbmZpbml0ZTtcclxuICAgICY6YmVmb3Jle1xyXG4gICAgICB0b3A6LTIwcHg7XHJcbiAgICAgIGxlZnQ6IDE2cHg7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgd2lkdGg6IDFweDtcclxuICAgICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIH1cclxuICAgICY6YWZ0ZXJ7XHJcbiAgICAgIHRvcDotMTRweDtcclxuICAgICAgbGVmdDogNnB4O1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHdpZHRoOiAxcHg7XHJcbiAgICAgIGhlaWdodDogMzBweDtcclxuICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbkBrZXlmcmFtZXMgbWFuLWZhbGwge1xyXG4gIDAle1xyXG4gICAgLy90cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMXB4KTtcclxuICB9XHJcbiAgMjUle1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2ZhbGwyLnBuZ1wiKTtcclxuICB9XHJcbiAgNTB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvZmFsbDMucG5nXCIpO1xyXG4gIH1cclxuICA3NXtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9mYWxsNC5wbmdcIik7XHJcbiAgfVxyXG4gIDEwMCV7XHJcbiAgICAvL3RyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9mYWxsMS5wbmdcIik7XHJcbiAgfVxyXG59IiwiLm1haW57XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCRibHVlLCAkaW5kaWdvLCAkb3JhbmdlKTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG5cclxuICAmLXNlY3Rpb257XHJcbiAgICBAaW5jbHVkZSBmbGV4LW1peGluKGNvbHVtbiwgY2VudGVyLCBmbGV4LXN0YXJ0KTtcclxuICAgIHBhZGRpbmc6IDAgOHZ3O1xyXG4gICAgaGVpZ2h0OiAzMjBweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuXHJcbiAgICAmOm50aC1jaGlsZChldmVuKXtcclxuICAgICAgQGluY2x1ZGUgZmxleC1taXhpbihjb2x1bW4sIGNlbnRlciwgZmxleC1lbmQpO1xyXG5cclxuICAgICAgLm1haW4tc2VjdGlvbl9fdGV4dHtcclxuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9faGVhZGluZ3tcclxuICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICBmb250LXNpemU6IDR2dztcclxuICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMnZ3O1xyXG4gICAgICB0ZXh0LXNoYWRvdzogMnB4IDJweCAycHggJHBpbmssXHJcbiAgICAgIC0ycHggLTJweCAycHggJHBpbmssXHJcbiAgICAgIDJweCAtMnB4IDJweCAkcGluayxcclxuICAgICAgLTJweCAycHggMnB4ICRwaW5rO1xyXG4gICAgfVxyXG4gICAgJl9fdGV4dHtcclxuICAgICAgZm9udC1zaXplOiAxLjN2dztcclxuICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMnZ3O1xyXG4gICAgICBsaW5lLWhlaWdodDogMS42O1xyXG4gICAgICBzdHJvbmd7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjV2dztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4ud2hhdHt9XHJcbi5wcmVzZW50YXRpb257fVxyXG4uc3Rvcnl7fVxyXG4uZ2FtZXBsYXl7fVxyXG4ub2JqZWN0aXZle31cclxuLnNob3B7fSIsIi5jb250YWN0c3tcblx0QGluY2x1ZGUgZmxleC1taXhpbihyb3csIGNlbnRlciwgY2VudGVyKTtcblx0aGVpZ2h0OiA2OHZoO1xuXHRib3JkZXItdG9wOiAxMHB4IGRhc2hlZCAkb3JhbmdlO1xuXHRwYWRkaW5nOiAwIDIwcHg7XG59XG4uY29udGFjdC1pbmZve1xuXG5cdCZfX2hlYWRpbmd7XG5cdFx0bWFyZ2luOiAwO1xuXHRcdG1hcmdpbi1ib3R0b206IDIwcHg7XG5cdFx0Zm9udC1zaXplOiA0dnc7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR9XG5cdCZfX3RleHR7XG5cdFx0Zm9udC1zaXplOiAydnc7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdG1hcmdpbi1ib3R0b206IDQwcHg7XG5cdH1cblx0XG59XG4ubWVkaWEtbGlua3N7XG5cdG1hcmdpbjogMDtcblx0QGluY2x1ZGUgZmxleC1taXhpbihyb3csIHNwYWNlLWFyb3VuZCwgY2VudGVyKTtcblx0ZmxleC13cmFwOiB3cmFwO1xuXHQmX19saW5re1xuXHRcdGZvbnQtc2l6ZTogNXZoO1xuXHRcdGxpbmUtaGVpZ2h0OiAxO1xuXHRcdG1hcmdpbjogMCAyNXB4IDIwcHggMjVweDtcblx0XHR0cmFuc2l0aW9uOiBjb2xvciAwLjJzIGVhc2UtaW4tb3V0O1xuXHRcdFxuXHRcdCY6aG92ZXJ7XG5cdFx0XHRjb2xvcjogJGluZGlnbztcblx0XHR9XG5cdH1cblx0Jl9faW1ne1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWSg1cHgpO1xuXHRcdG1heC1oZWlnaHQ6IDV2aDtcblx0XHR3aWR0aDogNXZoO1xuXHR9XG59IiwiLmZvb3Rlcntcblx0aGVpZ2h0OiAxMHZoO1xuXHRib3JkZXItdG9wOiAxMHB4IGRhc2hlZCB3aGl0ZTtcblx0YmFja2dyb3VuZDogJGRhcmstZ3JheTtcblx0cGFkZGluZzogMCA1MHB4O1xuXHRAaW5jbHVkZSBmbGV4LW1peGluKHJvdywgc3BhY2UtYmV0d2VlbiwgY2VudGVyKTtcblxuXHQmX19jb3B5cmlnaHR7XG5cdFx0Zm9udC1zaXplOiAxLjV2dztcblx0fVxuXHQmX19tYWRlLWJ5e1xuXHRcdGZvbnQtc2l6ZTogMS41dnc7XG5cdH1cblx0Jl9fYXV0aG9yLWxpbmt7XG5cdFx0dHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlLWluLW91dDsgXG5cdFx0Jjpob3Zlcntcblx0XHRcdGNvbG9yOiAkcHVycGxlO1xuXHRcdH1cblx0fVxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
